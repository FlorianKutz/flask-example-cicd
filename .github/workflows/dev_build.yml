# This workflow will install Python dependencies, lint and check for syntax errors run with a single version of Python
# After that the workflow will also run all unit tests via pytest with a single version of Python

name: DEV - Build and Unittest


on:
  push:
    branches-ignore: [ main ]

jobs:
  build:
 # Runs on ubuntu image
    runs-on: ubuntu-latest
    steps:
    # Checkout the code from GitHub
    - uses: actions/checkout@v1
    # Prepare python environment
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    # Install project & dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt        
    - name: Install project
      run: |
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 flaskr --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 flaskr --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
  test:
    needs: [build]
    # Runs on ubuntu image
    runs-on: ubuntu-latest
    steps:
    # Checkout the code from GitHub
    - uses: actions/checkout@v1
    # Prepare python environment
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    # Install project & dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt        
    - name: Install project
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pytest

  bandit-scan:
    needs: [build]
    runs-on: ubuntu-latest
    name: static code check bandit 

    steps:
    # Checkout the code from GitHub
      - uses: actions/checkout@v2
    # Runs a pre configured Bandit scan 
      - name: Run bandit
        uses: jpetrucciani/bandit-check@master
        with:
        # only scans under this path
          path: './flaskr'
  
  Scan-Build:
    needs: [build]
    # Scan runs on ubuntu, mac and windows
    runs-on: ubuntu-latest
    steps:
    # Checkout the code from GitHub
    - uses: actions/checkout@v1
    # Prepare python environment
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    # Install project & dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt        
    - name: Install project
      run: |
        pip install -e .
    # Run Integrated Security Scan
    - name: Perform Scan
      uses: ShiftLeftSecurity/scan-action@master
      env:
        WORKSPACE: ""
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SCAN_AUTO_BUILD: true
      with:
        output: reports
    # Upload Reports to GitHub security section 
    - name: Upload report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: reports
